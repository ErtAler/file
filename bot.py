import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from pyexpat.errors import messages

from keyboards import get_reply_keyboard, get_inline_keyboard
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from states import Form, FormGame



TOKEN = "8185372539:AAGIqUssQw0WGxgP7oNuZ7sTXJYwiaHwSjw"

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())


@dp.message(Command("start"))
async def start(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É:", reply_markup=get_reply_keyboard())


@dp.message(Command("button"))
async def send_line_button(message: Message):
    await message.answer("–í–æ—Ç —Ç–≤–æ—è –∫–Ω–æ–ø–∫–∞: ", reply_markup=get_inline_keyboard())


@dp.callback_query(F.data == "button_pressed")
async def button_pressed(callback: CallbackQuery):
    await callback.answer("–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞")
    await callback.message.answer("–¢—ã –±–æ–ª—å—à–æ–π –º–æ–ª–æ–¥–µ—Ü!")


@dp.message(F.text == "–ü—Ä–∏–≤–µ—Ç!")
async def reply_hello(message: Message):
    await message.answer("–ò —Ç–µ–±–µ —Ç–æ–∂–µ –ø—Ä–∏–≤–µ—Ç!")


@dp.message(F.text == "–ö–∞–∫ –¥–µ–ª–∞?")
async def reply_how_are_you(message: Message):
    await message.answer("–•–æ—Ä–æ—à–æ, —É —Ç–µ–±—è –∫–∞–∫?")


@dp.message(F.text == "–ü–æ–∫–∞!")
async def reply_bye(message: Message):
    await message.answer("–î–æ –≤—Å—Ç—Ä–µ—á–∏!")


@dp.message(Command("form"))
async def start_form(message: Message, state: FSMContext ):
    await state.set_state(Form.name)
    await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")


@dp.message(StateFilter(Form.name))
async def form_name(message: Message, state : FSMContext):
    await state.update_data(name = message.text)
    await state.set_state(Form.age)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

@dp.message(StateFilter(Form.age))
async def form_age(message : Message, state : FSMContext):
    if not message.text.isdigit():
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ç–æ–ª—å–∫–æ –≤ —Ü–∏—Ñ—Ä–∞—Ö")
        return
    await state.update_data(age = int(message.text))
    await state.set_state(Form.city)
    await message.answer("–ì–¥–µ —Ç—ã –∂–∏–≤–µ—à—å?")

@dp.message(StateFilter(Form.city))
async def form_city(message : Message, state : FSMContext):
    await state.update_data(city = message.text)
    data = await state.get_data()
    await message.answer(f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –í–æ—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n"
                         f"üë§ –ò–º—è: {data['name']}\n"
                         f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
                         f"üèôÔ∏è –ì–æ—Ä–æ–¥: {data['city']}")
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

@dp.message(Command("form1"))
async def start_form2(message : Message, state : FSMContext):
    await state.set_state(FormGame.favorite_game)
    await message.answer("–ö–∞–∫–∞—è –≤–∞—à–∞ –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞?")

@dp.message(StateFilter(FormGame.favorite_game))
async def form_fgame(message : Message, state : FSMContext):
    await state.update_data(favorite_game = message.text)
    await state.set_state(FormGame.favorite_character)
    await message.answer("–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏–∑ —ç—Ç–æ–π –∏–≥—Ä—ã?")

@dp.message(StateFilter(FormGame.favorite_character))
async def form_fcharacter(message : Message, state : FSMContext):
    await state.update_data(favorite_character = message.text)
    await state.set_state(FormGame.favorite_brend)
    await message.answer("–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –±—Ä–µ–Ω–¥?")

@dp.message(StateFilter(FormGame.favorite_brend))
async def form_fbrend(message : Message, state : FSMContext):
    await state.update_data(favorite_brend = message.text)
    data2 = await state.get_data()
    await message.answer(f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –í–æ—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:\n\n"
                         f"üë§ –õ—é–±–∏–º–∞—è –∏–≥—Ä–∞: {data2['favorite_game']}\n"
                         f"üéÇ –õ—é–±–∏–º–∞—è –∏–≥—Ä–∞: {data2['favorite_character']}\n"
                         f"üèôÔ∏è –õ—é–±–∏–º—ã–π –±—Ä–µ–Ω–¥: {data2['favorite_brend']}")
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è



# @dp.message()
# async def message_handler(message: Message):
#     if message.text == "–ü–æ–∫–∞!":
#         await message.answer("")
#     elif:
#
#     else:
#

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥–µ—Ç –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã . . .")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())








